from datetime import datetime
from typing import Literal

import pandas
from dotenv import load_dotenv
from langchain_core.messages import SystemMessage, HumanMessage, AIMessage
from langchain_core.output_parsers import PydanticOutputParser
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from pandas import DataFrame
from pydantic import BaseModel
from langchain_openai import ChatOpenAI
from langchain_community.callbacks import get_openai_callback


class ReportDetected(BaseModel):
    direction: Literal['to_estonia', 'to_russia']
    came_to_border_at: datetime | None = None
    first_country_checkpoint_entered: datetime | None = None
    first_country_checkpoint_exit: datetime | None
    second_country_checkpoint_entered: datetime | None
    second_country_checkpoint_exit: datetime | None
    comment: str | None


class ChatMessage(BaseModel):
    report_detected: ReportDetected | None


load_dotenv()
model = ChatOpenAI(model_name="gpt-4o-mini", temperature=0)
parser = PydanticOutputParser(pydantic_object=ChatMessage)
prompt = ChatPromptTemplate(messages=[SystemMessage('You must read a message and fill out fields. If there is no report detected return None for the report detected field in the message.\n '
                                           '`first_country_checkpoint_entered` and `second_country_checkpoint_exit` ARE ALWAYS REQUIRED to be SET TO APPROPRIATE DATETIME!!! THAT IS BASICALLY START AND END OF BORDER PASSING!\n'+parser.get_format_instructions()),
                             HumanMessage('–û—Ç—á–µ—Ç- 20.09- –ø—Ä–∏–µ—Ö–∞–ª–∏ –≤ –ù–∞—Ä–≤—É –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–∫–µ –≤ 13:30, –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –±—ã–ª–æ, —Å—Ä–∞–∑—É –∑–∞—à–ª–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü—É- –≤ –∏—Ç–æ–≥–µ —ç—Å—Ç–æ–Ω—Å–∫–∞—è–∏ —Ä—É—Å—Å–∫–∞—è –≤ —Å—É–º–º–µ 25 –º–∏–Ω—É—Ç! @@@ 2024-09-20 12:07:18'),
                             AIMessage('{"report_detected": {"direction": "to_estonia", "came_to_border_at": "2024-09-20T13:30:00", "first_country_checkpoint_entered": "2024-09-20T13:30:00", "first_country_checkpoint_exit": null, "second_country_checkpoint_entered": null, "second_country_checkpoint_exit": "2024-09-20T13:55:00", "comment": "–û—á–µ—Ä–µ–¥–∏ –Ω–µ –±—ã–ª–æ, —Å—Ä–∞–∑—É –∑–∞—à–ª–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü—É"}}'),
                             HumanMessage('–û—Ç—á–µ—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –≥—Ä–∞–Ω–∏—Ü—ã 20.09. –õ—é–∫—Å –≤—ã–µ—Ö–∞–ª –≤ 8:45 –∏–∑ —Å–ø–±. –í 11:30 –±—ã–ª–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ. –í 12:10 –≤—ã—à–ª–∏ –≤ –ù–∞—Ä–≤–µ. –ñ–¥—ë–º –ø–∞—Ä—É —á–µ–ª–æ–≤–µ–∫ –≤ –∞–≤—Ç–æ–±—É—Å–µ. –£ –Ω–∞—à–∏—Ö —á–µ–º–æ–¥–∞–Ω—ã –Ω–∞ –ª–µ–Ω—Ç—É. –≠—Å—Ç–æ–Ω—Ü—ã –Ω–µ —Å–º–æ—Ç—Ä–µ–ª–∏. –£ –∫–æ–≥–æ —Ç–æ –≤—ã–±–æ—Ä–æ—á–Ω–æ. –≠—Å—Ç–æ–Ω—Ü—ã —Å–ø—Ä–æ—Å–∏–ª–∏ –∫—É–¥–∞ –µ–¥–µ—Ç–µ. –°–∫–∞–∑–∞–ª–∏, —á—Ç–æ –¥—Ä—É–≥–∞—è —Å—Ç—Ä–∞–Ω–∞ –ï–≤—Ä–æ—Å–æ—é–∑–∞. –ü—Ä–æ—Ö–æ–¥–∏–ª–∏ —Å –ø–∞—Å–ø–æ—Ä—Ç–æ–º –ò–∑—Ä–∞–∏–ª—è. –ü—Ä–æ—Å–∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –æ—Ç–µ–ª—å –∏–ª–∏ –∞–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –µ–¥–µ—Ç–µ –∫ –∑–Ω–∞–∫–æ–º—ã–º) –∏ –æ–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç.  –í—Å–µ–º —É–¥–∞—á–∏ üôè @@@ 2024-09-20 09:54:42'),
                             AIMessage('{"report_detected": {"direction": "to_estonia", "came_to_border_at": null, "first_country_checkpoint_entered": "2024-09-20T11:30:00", "first_country_checkpoint_exit": null, "second_country_checkpoint_entered": null, "second_country_checkpoint_exit": "2024-09-20T12:10:00", "comment": "–ñ–¥—ë–º –ø–∞—Ä—É —á–µ–ª–æ–≤–µ–∫ –≤ –∞–≤—Ç–æ–±—É—Å–µ. –£ –Ω–∞—à–∏—Ö —á–µ–º–æ–¥–∞–Ω—ã –Ω–∞ –ª–µ–Ω—Ç—É. –≠—Å—Ç–æ–Ω—Ü—ã –Ω–µ —Å–º–æ—Ç—Ä–µ–ª–∏. –£ –∫–æ–≥–æ —Ç–æ –≤—ã–±–æ—Ä–æ—á–Ω–æ. –≠—Å—Ç–æ–Ω—Ü—ã —Å–ø—Ä–æ—Å–∏–ª–∏ –∫—É–¥–∞ –µ–¥–µ—Ç–µ. –°–∫–∞–∑–∞–ª–∏, —á—Ç–æ –¥—Ä—É–≥–∞—è —Å—Ç—Ä–∞–Ω–∞ –ï–≤—Ä–æ—Å–æ—é–∑–∞. –ü—Ä–æ—Ö–æ–¥–∏–ª–∏ —Å –ø–∞—Å–ø–æ—Ä—Ç–æ–º –ò–∑—Ä–∞–∏–ª—è. –ü—Ä–æ—Å–∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –æ—Ç–µ–ª—å –∏–ª–∏ –∞–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –µ–¥–µ—Ç–µ –∫ –∑–Ω–∞–∫–æ–º—ã–º) –∏ –æ–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç."}}'),
                             HumanMessage('–û—Ç—á–µ—Ç –≤ –∫–æ–ø–∏–ª–∫—É:  –í –≤–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ –≤ 14:10 –≤—Å—Ç–∞–ª–∞ –≤ –æ—á–µ—Ä–µ–¥—å –≤ –ù–∞—Ä–≤–µ. –í 16:40 –≤—ã—à–ª–∞ –≤ –ò–≤–∞–Ω–≥–æ—Ä–æ–¥–µ.  –ß–∞—Å –ø—Ä–æ–≤–µ–ª–∞ –Ω–∞ —ç—Å—Ç–æ–Ω—Å–∫–æ–π –≥—Ä–∞–Ω–∏—Ü–µ, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ø–∞—Ä–Ω–∏–∫–µ.  –ú–∏–Ω—É—Ç 5 –ø—Ä–æ–≤–µ–ª–∞ —É –æ–∫–æ—à–∫–∞ —Ç–∞–∫—Å—Ñ—Ä–∏.  –¢–∞–º–æ–∂–µ–Ω–Ω–∏–∫–∏ –≠—Å—Ç–æ–Ω–∏–∏ –æ—Ç–∫—Ä—ã–ª–∏ –±–∞–≥–∞–∂, —Å–ø—Ä–æ—Å–∏–ª–∏ –æ –Ω–∞–ª–∏—á–∏–∏ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–æ—Ä–æ–∂–µ 300‚Ç¨, –ø—Ä–æ—à—Ç–∞–º–ø–æ–≤–∞–ª–∏ —á–µ–∫–∏ —Ç–∞–∫—Å—Ñ—Ä–∏ –∏ –æ—Ç–ø—É—Å—Ç–∏–ª–∏ —Å –º–∏—Ä–æ–º.  –¢–∞–º–æ–∂–Ω—è –≤ –†–æ—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤–µ–∑—É –ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ –∏ –¥–µ–Ω–µ–≥ –±–æ–ª—å—à–µ 10–∫$  –ü–æ–≥—Ä–∞–Ω–∏—á–Ω–∏–∫ –≠—Å—Ç–æ–Ω–∏–∏, –¥–æ–ª–≥–æ –¥–æ–ø—Ä–∞—à–∏–≤–∞–ª –ø—Ä–æ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –≥–¥–µ –∂–∏–≤—É. –ò –æ—Å–Ω–æ–≤–∞–Ω–∏—è –Ω–∞–ª–∏—á–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ò –ø—Ä–æ –Ω–∞–ª–∏—á–Ω—ã–µ ‚Ç¨.  –ü–æ–≥—Ä–∞–Ω–∏—á–Ω–∏—Ü–∞ –†–æ—Å—Å–∏–∏ - –º–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞. @@@ 2024-09-17 10:23:50'),
                             AIMessage('{"report_detected": {"direction": "to_russia", "came_to_border_at": "2024-09-15T14:10:00", "first_country_checkpoint_entered": null, "first_country_checkpoint_exit": null, "second_country_checkpoint_entered": null, "second_country_checkpoint_exit": "2024-09-15T16:40:00", "comment": "–ß–∞—Å –ø—Ä–æ–≤–µ–ª–∞ –Ω–∞ —ç—Å—Ç–æ–Ω—Å–∫–æ–π –≥—Ä–∞–Ω–∏—Ü–µ, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ø–∞—Ä–Ω–∏–∫–µ. –ú–∏–Ω—É—Ç 5 –ø—Ä–æ–≤–µ–ª–∞ —É –æ–∫–æ—à–∫–∞ —Ç–∞–∫—Å—Ñ—Ä–∏. –¢–∞–º–æ–∂–µ–Ω–Ω–∏–∫–∏ –≠—Å—Ç–æ–Ω–∏–∏ –æ—Ç–∫—Ä—ã–ª–∏ –±–∞–≥–∞–∂, —Å–ø—Ä–æ—Å–∏–ª–∏ –æ –Ω–∞–ª–∏—á–∏–∏ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–æ—Ä–æ–∂–µ 300‚Ç¨, –ø—Ä–æ—à—Ç–∞–º–ø–æ–≤–∞–ª–∏ —á–µ–∫–∏ —Ç–∞–∫—Å—Ñ—Ä–∏ –∏ –æ—Ç–ø—É—Å—Ç–∏–ª–∏ —Å –º–∏—Ä–æ–º. –¢–∞–º–æ–∂–Ω—è –≤ –†–æ—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤–µ–∑—É –ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ –∏ –¥–µ–Ω–µ–≥ –±–æ–ª—å—à–µ 10–∫$. –ü–æ–≥—Ä–∞–Ω–∏—á–Ω–∏–∫ –≠—Å—Ç–æ–Ω–∏–∏, –¥–æ–ª–≥–æ –¥–æ–ø—Ä–∞—à–∏–≤–∞–ª –ø—Ä–æ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –≥–¥–µ –∂–∏–≤—É. –ò –æ—Å–Ω–æ–≤–∞–Ω–∏—è –Ω–∞–ª–∏—á–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ò –ø—Ä–æ –Ω–∞–ª–∏—á–Ω—ã–µ ‚Ç¨."}}'),
                             HumanMessage('–û—Ç—á–µ—Ç:  16.09.24 –ò–∑ –¢–∞–ª–ª–∏–Ω–Ω–∞ –¥–æ –ù–∞—Ä–≤—ã –∞–≤—Ç–æ–±—É—Å–æ–º ( –º–µ—Å—Ç–Ω—ã–º –õ—é–∫—Å–æ–º) –Ω–∞ 8.15. –°–ø–∞—Å–∏–±–æ –≤–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ –≤–∑—è–ª –Ω–∞—à–∏—Ö –ª–µ–≥–∞–≤—ã—Ö –≤ —Å–∞–ª–æ–Ω –ø–æ –±–∏–ª–µ—Ç–∞–º ( –Ω–∞–ª–∏—á–∏–µ –Ω–∞–º–æ—Ä–¥–Ω–∏–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –ü–æ –ø—Ä–∞–≤–∏–ª–∞–º –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ø–µ—Ä–µ–Ω–æ—Å–∫–µ, –Ω–æ —Ç–∞–∫–∏–µ —Ä–∞–∑–º–µ—Ä—ã –Ω–µ –≤–ª–µ–∑—É—Ç) –í 11.40 –≤—Å—Ç–∞–ª–∏ –Ω–∞–ø—Ä–æ—Ç–∏–≤ —Ç–∞–∫—Å–∏—Å—Ç–æ–≤. –í 14.15 –≤–Ω—É—Ç—Ä—å —ç—Å—Ç –ö–ü–ü –∑–∞–ø—É—Å—Ç–∏–ª–∏. –î–æ—Å–º–æ—Ç—Ä —á–µ–º–æ–¥–∞–Ω–∞, –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ –Ω–∞–ª–∏—á–∏–µ ‚Ç¨  –° —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –≤—ã—à–ª–∏ –≤ 15.50. –î–æ–ª–≥–æ –æ—Ñ–æ—Ä–º–ª—è–ª–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –∏ –∂–¥–∞–ª–∏ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞. –¢–∞–∫ –∂–µ –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–µ—Ä–∂–∏–≤–∞–ª–∏ –Ω–µ—Å—É–Ω—ã, —Å–æ —Å–≤–æ–∏–º–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏.  –° –†–æ—Å—Å–∏–∏, –≤ —ç—Ç–æ –≤—Ä–µ–º—è, –æ—á–µ—Ä–µ–¥–∏ –≤–æ–æ–±—â–µ –Ω–µ –±—ã–ª–æ. @@@ 2024-09-16 20:31:20'),
                             AIMessage('{"report_detected": {"direction": "to_estonia", "came_to_border_at": "2024-09-16T11:40:00", "first_country_checkpoint_entered": "2024-09-16T14:15:00", "first_country_checkpoint_exit": null, "second_country_checkpoint_entered": null, "second_country_checkpoint_exit": "2024-09-16T15:50:00", "comment": "–°–ø–∞—Å–∏–±–æ –≤–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ –≤–∑—è–ª –Ω–∞—à–∏—Ö –ª–µ–≥–∞–≤—ã—Ö –≤ —Å–∞–ª–æ–Ω –ø–æ –±–∏–ª–µ—Ç–∞–º ( –Ω–∞–ª–∏—á–∏–µ –Ω–∞–º–æ—Ä–¥–Ω–∏–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –ü–æ –ø—Ä–∞–≤–∏–ª–∞–º –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ø–µ—Ä–µ–Ω–æ—Å–∫–µ, –Ω–æ —Ç–∞–∫–∏–µ —Ä–∞–∑–º–µ—Ä—ã –Ω–µ –≤–ª–µ–∑—É—Ç) –í 11.40 –≤—Å—Ç–∞–ª–∏ –Ω–∞–ø—Ä–æ—Ç–∏–≤ —Ç–∞–∫—Å–∏—Å—Ç–æ–≤. –î–æ–ª–≥–æ –æ—Ñ–æ—Ä–º–ª—è–ª–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –∏ –∂–¥–∞–ª–∏ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞. –¢–∞–∫ –∂–µ –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–µ—Ä–∂–∏–≤–∞–ª–∏ –Ω–µ—Å—É–Ω—ã, —Å–æ —Å–≤–æ–∏–º–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏. –° –†–æ—Å—Å–∏–∏, –≤ —ç—Ç–æ –≤—Ä–µ–º—è, –æ—á–µ—Ä–µ–¥–∏ –≤–æ–æ–±—â–µ –Ω–µ –±—ã–ª–æ."}}'),
                             HumanMessage('–í—á–µ—Ä–∞ –±—ã–ª–æ –º–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–æ–≤ –≤ —á–∞—Ç–µ. @@@ 2024-09-16 09:21:36'),
                             AIMessage('{"report_detected": null}'),
                             HumanMessage('–æ—Ç—á–µ—Ç 10.10. –ù–∞—Ä–≤–∞-–ò–≤–∞–Ω–≥–æ—Ä–æ–¥ - –≤—Å—Ç–∞–ª–∞ –≤ –æ—á–µ—Ä–µ–¥—å –≤ 11:15 - –∑–∞—à–ª–∞ –Ω–∞ –Ω–∞—Ä–≤—Å–∫–æ–µ –∫–ø–ø –≤ 18:15 - –∑–∞—à–ª–∞ –Ω–∞ –∫–ø–ø —Ä—Ñ –≤ 18:35 - –≤—ã—à–ª–∞ –≤ –∏–≤–∞–Ω–≥–æ—Ä–æ–¥ –≤ 18:45 @@@ 2024-10-11 07:18:35'),
                             AIMessage('{"report_detected": {"direction": "to_russia", "came_to_border_at": "2024-10-10T11:15:00", "first_country_checkpoint_entered": "2024-10-10T18:15:00", "first_country_checkpoint_exit": null, "second_country_checkpoint_entered": "2024-10-10T18:35:00", "second_country_checkpoint_exit": "2024-10-10T18:45:00", "comment": null}}'),
                             HumanMessage('–û—Ç—á–µ—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è,–∫–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.–í—ã–µ—Ö–∞–ª–∏ –∏–∑ –ü–∏—Ç–µ—Ä–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∫–µ –æ—Ç –º.–ü—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ç–µ—Ä–∞–Ω–æ–≤ –≤ 8.20.–ù–∞ –≥—Ä–∞–Ω–∏—Ü–µ –≤  –ò–≤–∞–Ω–≥–æ—Ä–æ–¥–µ –±—ã–ª–∏ –≤ 10.20.–û—á–µ—Ä–µ–¥—å —Ä–æ–≤–Ω–æ 10 —á–µ–ª–æ–≤–µ–∫,–≤ –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–∞—à–∞ –º–∞—Ä—à—Ä—É—Ç–∫–∞.–ü—Ä–æ—Å—Ç–æ—è–ª–∏ –ø–∞—Ä—É –º–∏–Ω—É—Ç –∏ –≥—Ä–∞–Ω–∏—Ü—É –∑–∞–∫—Ä—ã–ª–∏ .74 –ª–µ—Ç–Ω–∏–π –º—É–∂—á–∏–Ω–∞ —É–ø–∞–ª –ø—Ä—è–º–æ –≤ —Ä–∞–º–∫–µ –∫–æ–Ω—Ç—Ä–æ–ª—è.–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤—ã–∑–≤–∞–ª–∏ —Å–∫–æ—Ä—É—é.–ü–æ–∫–∞ —Å–∫–æ—Ä–∞—è –µ—Ö–∞–ª–∞,–æ–Ω —É–º–µ—Ä.–°–∫–æ—Ä–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª–∞ —Å–º–µ—Ä—Ç—å.–ü–æ—Ç–æ–º –µ–≥–æ –Ω–∞–∫—Ä—ã–ª–∏ —á–µ—Ä–Ω—ã–º –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–º –ø–∞–∫–µ—Ç–æ–º –∏ —Å–Ω–æ–≤–∞ —Å—Ç–∞–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –ª—é–¥–µ–π.–í –æ–±—â–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ç–æ—è–ª–∏ –º–∏–Ω—É—Ç 40.–õ—é–¥–µ–π –ø—Ä–æ–ø—É—Å–∫–∞–ª–∏ —Å –¥—Ä—É–≥–æ–π —Å—Ç—Ä–æ–Ω—ã,–Ω–µ —á–µ—Ä–µ–∑ —Ä–∞–º–∫—É.–í —Ä–∞–º–∫–µ –ª–µ–∂–∞–ª —Ç—Ä—É–ø.–ù–∞ –≠—Å—Ç–æ–Ω—Å–∫–æ–π —Å—Ç—Ä–æ–Ω–µ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –†–æ—Å—Å–∏–∏ –Ω–µ –±—ã–ª–æ –Ω–∏–∫–æ–≥–æ.–ü—Ä–æ—à–ª–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ—Ä–æ—Ç–∞.–î–æ—Å–º–æ—Ç—Ä–∞ –≤–µ—â–µ–π —Ç–æ–∂–µ –Ω–µ –±—ã–ª–æ.–û—á–µ—Ä–µ–¥—å —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ù–∞—Ä–≤—ã –≤ –†–æ—Å—Å–∏—é –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–∞—è,–∫–æ–Ω—Ü–∞ –¥–∞–∂–µ –Ω–µ –≤–∏–¥–Ω–æ.–°—Ç–æ—è—â–∏–µ –≤ –Ω–µ–π –ª—é–¥–∏ —Å–∫–∞–∑–∞–ª–∏,—á—Ç–æ —É  —ç—Å—Ç–æ–Ω—Ü–µ–≤ —Å–±–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ –∏ —É–∂–µ –æ—á–µ–Ω—å –¥–æ–ª–≥–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –∑–∞–ø—É—Å–∫–∞—é—Ç.–í–æ—Ç —Ç–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è —Ç—Ä–µ—à.–ñ–µ–Ω—â–∏–Ω—ã –≤ –æ—á–µ—Ä–µ–¥–∏ —Å–∫–∞–∑–∞–ª–∏,—á—Ç–æ –º—É–∂—á–∏–Ω–µ –±—ã–ª–æ 74 –≥–æ–¥–∞,–æ–Ω —ç—Å—Ç–æ–Ω–µ—Ü –∏–∑ –Ω–µ—Å—É–Ω–æ–≤. @@@ 2024-10-11 11:01:18'),
                             AIMessage('{"report_detected": {"direction": "to_estonia", "came_to_border_at": "2024-10-11T10:20:00", "first_country_checkpoint_entered": null, "first_country_checkpoint_exit": null, "second_country_checkpoint_entered": null, "second_country_checkpoint_exit": "2024-10-11T11:00:00", "comment": "–í—ã–µ—Ö–∞–ª–∏ –∏–∑ –ü–∏—Ç–µ—Ä–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∫–µ –æ—Ç –º.–ü—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ç–µ—Ä–∞–Ω–æ–≤, –ü—Ä–æ—à–ª–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ—Ä–æ—Ç–∞. –î–æ—Å–º–æ—Ç—Ä–∞ –≤–µ—â–µ–π —Ç–æ–∂–µ –Ω–µ –±—ã–ª–æ. –û—á–µ—Ä–µ–¥—å —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ù–∞—Ä–≤—ã –≤ –†–æ—Å—Å–∏—é –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–∞—è, –∫–æ–Ω—Ü–∞ –¥–∞–∂–µ –Ω–µ –≤–∏–¥–Ω–æ."}}'),
                             SystemMessage('NOW START! Here is the message for you to process:'),
                             MessagesPlaceholder('messages')
                             ])
df = pandas.read_csv('parsed_messages.csv')
with get_openai_callback() as cb:
    result_df = []
    for index, row in df.iterrows():
        text = row['text']

        if text:
            print(text)
            prompt_and_model = prompt | model
            output = prompt_and_model.invoke(dict(messages=[HumanMessage(f"{text} @@@ {row['date']}")]))
            report_parsed = parser.invoke(output)
            if not report_parsed.report_detected:
                continue
            print(report_parsed)
            result_df.append(report_parsed.model_dump()['report_detected'])
            DataFrame(result_df).to_csv('reports.csv')
            print(f"Total Tokens: {cb.total_tokens}")
            print(f"Prompt Tokens: {cb.prompt_tokens}")
            print(f"Completion Tokens: {cb.completion_tokens}")
            print(f"Total Cost (USD): ${cb.total_cost}")
